import { type NextPage } from "next";
import Head from "next/head";
import { signIn, signOut, useSession } from "next-auth/react";

import { api } from "~/utils/api";
import axios from 'axios';

const Home: NextPage = () => {
  // const hello = api.example.hello.useQuery({ text: "from tRPC" });

  const fetchData = async () => {

    console.log("Running data fetch...")
    
    const lat = 42.9858; // Jenness Beach
    const lng = 70.7623; // Jenness Beach
    const params = 'waveHeight,wavePeriod,windSpeed,swellHeight,swellPeriod,airTemperature,waterTemperature';

    const start = new Date("03/17/2023").toISOString();
    const end = new Date("03/30/2023").toISOString();

    // The api URL
    const url = `https://api.stormglass.io/v2/weather/point?lat=${lat}&lng=${lng}&params=${params}&start=${start}&end=${end}`;

    const resp = await fetch(url, {
      headers: {
        'Authorization': process.env.STORM_GLASS_IO_KEY!
      }
    }).then((response) => response.json()).then((jsonData) => {
      
      console.log(jsonData);
    });

    console.log(resp)

    // const resp = axios.get(url, config)
    //   .then(res => console.log(res))
    //   .catch(err => console.error(err));

  }

  return (
    <>
      <Head>
        <title>Ones</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="min-h-screen bg-gray-900">

      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={fetchData}
      >Fetch Data</button>

      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
